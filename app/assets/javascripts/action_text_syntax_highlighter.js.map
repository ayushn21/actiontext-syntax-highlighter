{"version":3,"sources":["webpack://@ayushn21/actiontext-syntax-highlighter/./app/frontend/action_text_syntax_highlighter/css/highlighted_code_block.css","webpack://@ayushn21/actiontext-syntax-highlighter/./node_modules/css-loader/dist/runtime/api.js","webpack://@ayushn21/actiontext-syntax-highlighter/webpack/bootstrap","webpack://@ayushn21/actiontext-syntax-highlighter/webpack/runtime/compat get default export","webpack://@ayushn21/actiontext-syntax-highlighter/webpack/runtime/define property getters","webpack://@ayushn21/actiontext-syntax-highlighter/webpack/runtime/hasOwnProperty shorthand","webpack://@ayushn21/actiontext-syntax-highlighter/./app/frontend/action_text_syntax_highlighter/javascript/highlighted_code_block.js","webpack://@ayushn21/actiontext-syntax-highlighter/./app/frontend/action_text_syntax_highlighter/javascript/helpers.js","webpack://@ayushn21/actiontext-syntax-highlighter/./app/frontend/action_text_syntax_highlighter/javascript/trix_code_block_highlighter.js","webpack://@ayushn21/actiontext-syntax-highlighter/./app/frontend/action_text_syntax_highlighter/javascript/actiontext_syntax_highlighter.js"],"names":["push","module","id","exports","useSourceMap","list","toString","this","map","item","content","sourceMap","base64","data","cssMapping","btoa","sourceMapping","unescape","encodeURIComponent","JSON","stringify","concat","sourceURLs","sources","source","sourceRoot","join","cssWithMappingToString","i","modules","mediaQuery","dedupe","alreadyImportedModules","length","_i","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","HighlightedCodeBlock","HTMLElement","closest","editor","setup","dataset","trixHighlightedCodeBlock","trixId","parseInt","parentElement","attachment","getDocument","getAttachmentById","type","configureEventListeners","sgid","getAttributes","syntaxHighlighter","saveCodeBlock","toJSON","render","setAttributes","outerHTML","event","selectLanguage","target","value","save","language","languageSelector","querySelector","removeAttribute","setAttribute","codeBlock","addEventListener","bind","languageChanged","highlighted_code_block","innerHTML","getDefaultHeaders","document","head","TrixCodeBlockHighlighter","element","fetch","ActionTextSyntaxHighlighter","basePath","method","headers","then","response","json","result","insertCodeBlock","block","body","Trix","Attachment","insertAttachment","composition","editAttachment","editorToolbar","interceptToolbarCodeButton","watchCursor","editorToolbarCodeButton","addCodeBlock","preventDefault","stopImmediatePropagation","updateToolbarCodeButtonState","getPosition","position","getPieceAtPosition","classList","add","remove","toolbarElement","customElements","define","highlightsCodeBlocks"],"mappings":"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","file":"action_text_syntax_highlighter.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"trix-editor pre[contenteditable] {\\n  -webkit-user-select: text;\\n  user-select: text;\\n}\\n\\ntrix-editor pre[contenteditable]::selection {\\n  background: highlight;\\n  color: highlightText;\\n}\\n\\ntrix-editor select[name='language'] {\\n  margin: 0.4em 0;\\n  font-size: 0.8em;\\n  padding: 0.4em 0;\\n}\\n\\nhighlighted-code-block > pre {\\n  text-align: left;\\n  outline: none;\\n}\\n\\nhighlighted-code-block  > select {\\n  display: inline-block;\\n  float: right;\\n}\\n\\nfigure[data-trix-mutable][data-trix-highlighted-code-block] pre {\\n  box-shadow: 0 0 0 1px highlight;\\n}\\n\\ntrix-toolbar[data-highlights-code-blocks] [data-trix-attribute='code'].trix-active {\\n  pointer-events: none;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://app/frontend/action_text_syntax_highlighter/css/highlighted_code_block.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA;EACE,qBAAqB;EACrB,oBAAoB;AACtB;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,aAAa;AACf;;AAEA;EACE,qBAAqB;EACrB,YAAY;AACd;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,oBAAoB;AACtB\",\"sourcesContent\":[\"trix-editor pre[contenteditable] {\\n  -webkit-user-select: text;\\n  user-select: text;\\n}\\n\\ntrix-editor pre[contenteditable]::selection {\\n  background: highlight;\\n  color: highlightText;\\n}\\n\\ntrix-editor select[name='language'] {\\n  margin: 0.4em 0;\\n  font-size: 0.8em;\\n  padding: 0.4em 0;\\n}\\n\\nhighlighted-code-block > pre {\\n  text-align: left;\\n  outline: none;\\n}\\n\\nhighlighted-code-block  > select {\\n  display: inline-block;\\n  float: right;\\n}\\n\\nfigure[data-trix-mutable][data-trix-highlighted-code-block] pre {\\n  box-shadow: 0 0 0 1px highlight;\\n}\\n\\ntrix-toolbar[data-highlights-code-blocks] [data-trix-attribute='code'].trix-active {\\n  pointer-events: none;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export class HighlightedCodeBlock extends HTMLElement {\n  connectedCallback() {\n    if (this.closest(\"trix-editor\")?.editor) {\n      this.setup()\n    }\n  }\n\n  setup() {\n    this.editor = this.closest(\"trix-editor\").editor\n    this.closest(\"figure\").dataset.trixHighlightedCodeBlock = true\n\n    this.trixId = parseInt(this.parentElement.dataset.trixId)\n    this.attachment = this.editor.getDocument().getAttachmentById(this.trixId)\n    this.attachment.type = \"HighlightedCodeBlock\"\n\n    this.configureEventListeners()\n  }\n\n  save() {\n    let sgid = this.attachment.getAttributes().sgid\n    this.editor.syntaxHighlighter.saveCodeBlock(this.toJSON(), sgid)\n    this.render()\n  }\n\n  render() {\n    this.attachment.setAttributes({\n      \"content\": this.outerHTML\n    })\n  }\n\n  languageChanged(event) {\n    this.selectLanguage(event.target.value)\n    this.save()\n  }\n\n  selectLanguage(language) {\n    this.languageSelector\n      .querySelector(\"option[selected]\")\n      .removeAttribute(\"selected\")\n\n    this.languageSelector\n      .querySelector(`option[value='${language}']`)\n      .setAttribute(\"selected\", \"\")\n  }\n\n  configureEventListeners() {\n    this.codeBlock\n      .addEventListener(\"blur\", this.save.bind(this))\n    this.languageSelector\n      .addEventListener(\"change\", this.languageChanged.bind(this))\n  }\n\n  toJSON() {\n    return JSON.stringify({\n      highlighted_code_block: {\n        content: this.codeBlock.innerHTML,\n        language: this.languageSelector.value\n      }\n    })\n  }\n\n  get codeBlock() {\n    return this.querySelector(\"pre\")\n  }\n\n  get languageSelector() {\n    return this.querySelector(\"select\")\n  }\n}","export function getDefaultHeaders() {\n  return {\n    \"Content-Type\": \"application/json\",\n    \"Accept\": \"application/json\",\n    \"X-CSRF-Token\": getCsrfToken()\n  }\n}\n\nexport function getCsrfToken() {\n  return document.head.querySelector(\"meta[name='csrf-token']\").content\n}","import { ActionTextSyntaxHighlighter } from \"./actiontext_syntax_highlighter\"\nimport { getDefaultHeaders } from \"./helpers\"\n\nexport class TrixCodeBlockHighlighter {\n  constructor(element) {\n    this.element = element\n    this.editor = element.editor\n\n    this.setup()\n  }\n\n  addCodeBlock(event) {\n    fetch(ActionTextSyntaxHighlighter.basePath, {\n      method: \"POST\",\n      headers: getDefaultHeaders()\n    })\n    .then(response => response.json())\n    .then(result => this.insertCodeBlock(result))\n  }\n\n  saveCodeBlock(block, sgid) {\n    fetch(`${ActionTextSyntaxHighlighter.basePath}/${sgid}`, {\n      method: \"PATCH\",\n      headers: getDefaultHeaders(),\n      body: block\n    })\n  }\n\n  insertCodeBlock(block) {\n    let attachment = new Trix.Attachment(block)\n    this.editor.insertAttachment(attachment)\n    this.editor.composition.editAttachment(attachment)\n  }\n\n  // Private\n\n  setup() {\n    this.editorToolbar.setAttribute(\"data-highlights-code-blocks\", \"\")\n    this.editor.syntaxHighlighter = this\n\n    this.interceptToolbarCodeButton()\n    this.watchCursor()\n\n    // Setup the first highlighted code block which triggers a re-render\n    // and sets them all up via the connectedCallback\n    this.element.querySelector(\"highlighted-code-block\").setup()\n  }\n\n  interceptToolbarCodeButton() {\n    this.editorToolbarCodeButton.addEventListener('mousedown', (event) => {\n      this.addCodeBlock()\n      event.preventDefault()\n      event.stopImmediatePropagation()\n    })\n  }\n\n  watchCursor() {\n    this.element.addEventListener('trix-selection-change', event => {\n      this.updateToolbarCodeButtonState(this.editor.getPosition())\n    })\n  }\n\n  updateToolbarCodeButtonState(position) {\n    let attachmentType = this.editor.getDocument().getPieceAtPosition(position).attachment?.type\n    if (attachmentType == \"HighlightedCodeBlock\") {\n      this.editorToolbarCodeButton.classList.add(\"trix-active\")\n    } else {\n      this.editorToolbarCodeButton.classList.remove(\"trix-active\")\n    }\n  }\n\n  get editorToolbar() {\n    return this.element.toolbarElement\n  }\n\n  get editorToolbarCodeButton() {\n    return this.editorToolbar.querySelector(\"[data-trix-attribute='code']\")\n  }\n}","import { HighlightedCodeBlock } from \"./highlighted_code_block\"\nimport { TrixCodeBlockHighlighter } from \"./trix_code_block_highlighter\"\n\nexport class ActionTextSyntaxHighlighter {\n  static basePath = \"/action_text/highlighted_code_blocks\"\n\n  static start() {\n    customElements.define('highlighted-code-block', HighlightedCodeBlock)\n\n    document.addEventListener(\"trix-initialize\", (event) => {\n      if (event.target.dataset.highlightsCodeBlocks) {\n        new TrixCodeBlockHighlighter(event.target)\n      }\n    })\n  }\n}\n"],"sourceRoot":""}